name: CI

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "**"

jobs:
  tests:
    name: Tests
    
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version:
          - "7.4"
          - "8.0"
        dependencies:
          - lowest
          - locked
          - highest
        
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        
      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v1
        with:
          php-version: ${{ matrix.php-version }}
          coverage: pcov
          extensions: json, mbstring, pdo_sqlite
          ini-values: assert.exception=1, zend.assertions=1

      - name: Validate composer.json and composer.lock
        run: composer validate
      
      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            php${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-
        
      - name: "Install lowest dependencies with composer"
        if: matrix.dependencies == 'lowest'
        run: composer update --no-ansi --no-interaction --no-progress --no-suggest --prefer-lowest
        
      - name: "Install locked dependencies with composer"
        if: matrix.dependencies == 'locked'
        run: composer install --no-ansi --no-interaction --no-progress --no-suggest

      - name: "Install highest dependencies with composer"
        if: matrix.dependencies == 'highest'
        run: composer update --no-ansi --no-interaction --no-progress --no-suggest
        
      - name: Run test suite
        run: composer run-script test

      - name: "Dump Xdebug filter with phpunit/phpunit"
        run: vendor/bin/phpunit --dump-xdebug-filter=.build/phpunit/xdebug-filter.php

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: vendor/bin/phpunit --coverage-clover=coverage.xml --prepend=.build/phpunit/xdebug-filter.php

      - name: "Send code coverage report to Codecov.io"
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash) || true
